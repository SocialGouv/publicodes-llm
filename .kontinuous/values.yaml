app:
  ~chart: app
  containerPort: 8501
  probesPath: /_stcore/health
  ~needs: [build-app]
  envFrom:
    - secretRef:
        name: openai
  env:
    - name: ANONYMIZED_TELEMETRY
      value: "False"
    - name: STREAMLIT_BROWSER_GATHER_USAGE_STATS
      value: "False"
    - name: STREAMLIT_CLIENT_TOOLBAR_MODE
      value: "minimal"
    - name: STREAMLIT_THEME_BASE
      value: "light"
    - name: OPENAI_URL
      value: "http://proxy.{{ .Values.global.namespace }}.svc"
    - name: PUBLICODES_API_URL
      value: "http://publicodes-api.{{ .Values.global.namespace }}.svc"
  startupProbe:
    failureThreshold: 60
    httpGet:
      path: /_stcore/health
      port: http
      scheme: HTTP
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

proxy:
  ~chart: app
  image: nginx:alpine3.18
  containerPort: 8080
  probesPath: /rules
  ingress:
    enabled: false
  envFrom:
    - secretRef:
        name: openai
  volumeMounts:
    - mountPath: /etc/nginx/conf.d/default.conf
      name: nginx-config
      subPath: default.conf
  volumes:
    - name: nginx-config
      configMap:
        name: nginx-config
        items:
          - key: default.conf
            path: default.conf

publicodes-api:
  ~chart: app
  containerPort: 3002
  imagePackage: publicodes-api
  probesPath: /rules
  ~needs: [build-publicodes-api]
  ingress:
    enabled: false

jobs:
  runs:
    build-app:
      use: build
      with:
        imagePackage: app
        dockerfile: Dockerfile.streamlit
        buildArgs:
          COMMIT_SHA: "{{ $.Values.global.sha }}"

    build-publicodes-api:
      use: build
      with:
        imagePackage: publicodes-api
        context: ./publicodes-api
        dockerfile: Dockerfile
        buildArgs:
          COMMIT_SHA: "{{ $.Values.global.sha }}"
